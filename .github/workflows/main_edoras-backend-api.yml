# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - edoras-backend-api

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: |
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Install dev dependencies for testing
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # Verify installations
          pip list
          
      - name: Prepare deployment package
        run: |
          # Remove any problematic files for Azure deployment
          find . -name "*.pyc" -delete
          find . -name "__pycache__" -type d -exec rm -rf {} + || true
          
          # Ensure startup.txt is included
          if [ ! -f startup.txt ]; then
            echo "gunicorn --bind=0.0.0.0 --timeout 600 --workers 4 app:app" > startup.txt
          fi
        
      # Run tests and verify the app works
      - name: Run tests
        run: |
          source venv/bin/activate
          # Set environment variables for testing
          export FLASK_APP=app.py
          export FLASK_ENV=testing
          export DATABASE_URL=sqlite:///test.db
          export PYTHONPATH="${PYTHONPATH}:$(pwd):$(pwd)/src"
          
          # Run tests if they exist
          if [ -d "tests" ]; then
            python -m pytest tests/ -v
          elif ls test_*.py 1> /dev/null 2>&1; then
            python -m pytest test_*.py -v
          else
            echo "No tests found, running syntax check instead"
            python -m py_compile app.py
          fi
          
      - name: Test Flask app startup
        run: |
          source venv/bin/activate
          export FLASK_APP=app.py
          export FLASK_ENV=production
          export PYTHONPATH="${PYTHONPATH}:$(pwd):$(pwd)/src"
          # Test that the Flask app can start without errors
          timeout 10s python app.py || true

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !venv/
            !__pycache__/
            !*.pyc
            !.git/
            !.pytest_cache/
            !node_modules/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_1B2CDF489FDA4CA28F4077E4FD33A917 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B5D8D47583014152861C9AC3CA4F2C7C }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_BC625E0F900343B8B115ED1B7D6B8BFD }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'edoras-backend-api'
          slot-name: 'Production'
          startup-command: 'gunicorn --bind=0.0.0.0 --timeout 600 --workers 4 app:app'
          
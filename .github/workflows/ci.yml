name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Create virtual environment
      run: |
        python -m pip install --upgrade pip
        python -m venv venv
    
    - name: Activate virtual environment and install dependencies
      run: |
        source venv/bin/activate
        pip install -r requirements.txt
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Set up environment variables
      run: |
        echo "FLASK_APP=app.py" >> $GITHUB_ENV
        echo "FLASK_ENV=testing" >> $GITHUB_ENV
        echo "DATABASE_URL=sqlite:///test.db" >> $GITHUB_ENV
    
    - name: Run tests
      run: |
        source venv/bin/activate
        # Run Python tests if they exist
        if [ -d "tests" ]; then
          python -m pytest tests/ -v
        elif ls test_*.py 1> /dev/null 2>&1; then
          python -m pytest test_*.py -v
        else
          echo "No tests found, running syntax check instead"
          python -m py_compile app.py
        fi
    
    - name: Run linting (optional)
      run: |
        source venv/bin/activate
        # Install and run flake8 if you want linting
        # pip install flake8
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Test Flask app startup
      run: |
        source venv/bin/activate
        # Test that the Flask app can start without errors
        timeout 10s python app.py || true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Add your deployment steps here"
        # Example: Deploy to Heroku, AWS, etc.
